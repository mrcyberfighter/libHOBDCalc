{"name":"Libhobdcalc","tagline":"libHOBDCalc is a C library for multibase (bases: 2,8,10,16) conversion and calculating. With signed integers and floats converting, adding, substract, multiplying and dividing functions.","body":"# HOBDCalc (Hexadecimal, Octal, Binary, Decimal Calculator) library.\r\n\r\n\r\n## Description\r\n\r\n**HOBDCalc** is an little library for converting decimal values (*signed* *integers* or *floating-point* values) in an string representing the value in following bases. \r\n\r\n* **Binary** base (2). \r\n\r\n* **Octal** base (8).\r\n\r\n* **Hexadecimal** base (16).\r\n\r\nThe values are converting in an string in the wanted base.\r\n\r\nAnd **HOBDCalc** provide the back conversion functions: \r\n\r\nfrom an string in base 2, 8 or 16 to the corresponding value in decimal base.\r\n\r\nThat's not all because HOBDCalc implement the basic operations to apply on the strings in the supported base.\r\n\r\n* **Addition** from 2 strings in base 2, 8 or 16.\r\n\r\n* **Substraction** from 2 strings in base 2, 8 or 16.\r\n\r\n* **Multiplication** from  2 strings in base 2, 8 or 16.\r\n\r\n* **Division** from 2 strings in base 2, 8 or 16.\r\n\r\nEither as *integer* values or as *floating-point* values.\r\n    \r\n## Functions listing\r\n\r\n>   char \\*inttobin(long long value, char \\*buffer) ;\r\n>\r\n>   char \\*inttooct(long long value, char \\*buffer) ;\r\n>\r\n>   char \\*inttohex(long long value, char \\*buffer) ;\r\n>\r\n>\r\n>   long long bintoint(const char \\*string)  ;\r\n>\r\n>   long long octtoint(const char \\*string)  ;\r\n>\r\n>   long long hextoint(const char \\*string)  ;\r\n>\r\n>\r\n>   char \\*floattobinfloat(long double value, char \\*buffer)  ;\r\n>\r\n>   char \\*floattooctfloat(long double value, char \\*buffer)  ;\r\n>\r\n>   char \\*floattohexfloat(long double value, char \\*buffer)  ;\r\n>\r\n>\r\n>   long double binfloattofloat(const char \\*float_string)  ;\r\n>\r\n>   long double octfloattofloat(const char \\*float_string)  ;\r\n>\r\n>   long double octfloattofloat(const char \\*float_string)  ;\r\n>\r\n>\r\n>   long long binaddbin(const char \\*bin_str_1, const char \\*bin_str_2)   ;\r\n>\r\n>   long long binsubbin(const char \\*bin_str_1, const char \\*bin_str_2)   ;\r\n>\r\n>   long long binmultbin(const char \\*bin_str_1, const char \\*bin_str_2)  ;\r\n>\r\n>   long double bindivbin(const char \\*bin_str_1, const char \\*bin_str_2) ;\r\n>\r\n>\r\n>   long long octaddoct(const char \\*oct_str_1, const char \\*oct_str_2)   ;\r\n>\r\n>   long long octsuboct(const char \\*oct_str_1, const char \\*oct_str_2)   ;\r\n>\r\n>   long long octmultoct(const char \\*oct_str_1, const char \\*oct_str_2)  ;\r\n>\r\n>   long double octdivoct(const char \\*oct_str_1, const char \\*oct_str_2) ;\r\n>\r\n>\r\n>   long long hexaddhex(const char \\*hex_str_1, const char \\*hex_str_2)   ;\r\n>\r\n>   long long hexsubhex(const char \\*hex_str_1, const char \\*hex_str_2)   ;\r\n>\r\n>   long long hexmulthex(const char \\*hex_str_1, const char \\*hex_str_2)  ;\r\n>\r\n>   long double hexdivhex(const char \\*hex_str_1, const char \\*hex_str_2) ;\r\n>\r\n>\r\n>   long double binfloataddbinfloat(const char \\*bin_float_str_1, const char \\*bin_float_str_2)   ;\r\n>\r\n>   long double binfloatsubbinfloat(const char \\*bin_float_str_1, const char \\*bin_float_str_2)   ;\r\n>\r\n>   long double binfloatmultbinfloat(const char \\*bin_float_str_1, const char \\*bin_float_str_2)  ;\r\n>\r\n>   long double binfloatdivbinfloat(const char \\*bin_float_str_1, const char \\*bin_float_str_2)   ;\r\n>\r\n>\r\n>   long double octfloataddoctfloat(const char \\*oct_float_str_1, const char \\*oct_float_str_2)   ;\r\n>\r\n>   long double octfloatsuboctfloat(const char \\*oct_float_str_1, const char \\*oct_float_str_2)   ;\r\n>\r\n>   long double octfloatmultoctfloat(const char \\*oct_float_str_1, const char \\*oct_float_str_2)  ;\r\n>\r\n>   long double octfloatdivoctfloat(const char \\*oct_float_str_1, const char \\*oct_float_str_2)   ;\r\n>\r\n>\r\n>   long double hexfloataddhexfloat(const char \\*hex_float_str_1, const char \\*hex_float_str_2)   ;\r\n>\r\n>   long double hexfloatsubhexfloat(const char \\*hex_float_str_1, const char \\*hex_float_str_2)   ;\r\n>\r\n>   long double hexfloatmulthexfloat(const char \\*hex_float_str_1, const char \\*hex_float_str_2)  ;\r\n>\r\n>   long double hexfloatdivhexfloat(const char \\*hex_float_str_1, const char \\*hex_float_str_2)   ;\r\n>\r\n\r\n## Installation\r\n\r\n    \r\n      \r\n    \r\n>     $ ./configure          # This will perform a system check and set some variables.\r\n\r\n>     $ make                 # This will build the shared and the static library.\r\n\r\n>     $ sudo make install    # This will install libHOBDCalc on your system, As shared and static library and the manpages.\r\n     \r\n    \r\n## Development with HOBDCalc\r\n\r\nBy compilation of your program simply link the **HOBDCalc** library.\r\n    \r\n>     $ cc main.c -lHOBDCalc\r\n    \r\nIf this fail try to link *first* the **HOBDCalc** library and *after* the **math** library.       \r\n    \r\n>     $ cc main.c -HOBDCalc -lm   # In that order.    \r\n    \r\n\r\n## Usage advice of libHOBDCalc:\r\n\r\n\r\nFor the base conversions for floating-points values use the **double** type instead of the **long double** type by usage of a cast.\r\n\r\nBecause libHOBDCalc compute internally with the type **long double** type but if you want an fully exact returned value use a cast to  the **double** type. \r\n\r\nlike in the provide assertions file of the library: **hobdcalc_assertions.c** which demonstrate the exactitude of **libHOBDCalc** with an correct usage and to put **libHOBDCalc** to the proof.    \r\n  \r\n    \r\n## Note for developpers:\r\n\r\nI failed to implement the under|over flow detection by operations functions who deal with the type **long double**.\r\n\r\nIf you know how to detect so an under|over flow thank's to contact me at: <mrcyberfighter@gmail.com>.\r\n    \r\n# mapages:\r\n\r\n\r\nRead the manpages available at section 3 for usage of libHOBDCalc:\r\n\r\n* $ man binaddbin\r\n\r\n* $ man bindivbin\r\n\r\n* $ man binfloataddbinfloat\r\n\r\n* $ man binfloatdivbinfloat\r\n\r\n* $ man binfloatmultbinfloat\r\n\r\n* $ man binfloatsubbinfloat\r\n\r\n* $ man binfloattofloat\r\n\r\n* $ man binmultbin\r\n\r\n* $ man binsubbin\r\n\r\n* $ man bintoint\r\n\r\n* $ man floattobinfloat\r\n\r\n* $ man floattohexfloat\r\n\r\n* $ man floattooctfloat\r\n\r\n* $ man hexaddhex\r\n\r\n* $ man hexdivhex\r\n\r\n* $ man hexfloataddhexfloat\r\n\r\n* $ man hexfloatdivhexfloat\r\n\r\n* $ man hexfloatmulthexfloat\r\n\r\n* $ man hexfloatsubhexfloat\r\n\r\n* $ man hexfloattofloat\r\n\r\n* $ man hexmulthex\r\n\r\n* $ man hexsubhex\r\n\r\n* $ man hextoint\r\n\r\n* $ man hobdcalc\r\n\r\n* $ man inttobin\r\n\r\n* $ man inttohex\r\n\r\n* $ man inttooct\r\n\r\n* $ man octaddoct\r\n\r\n* $ man octdivoct\r\n\r\n* $ man octfloataddoctfloat\r\n\r\n* $ man octfloatdivoctfloat\r\n\r\n* $ man octfloatmultoctfloat\r\n\r\n* $ man octfloatsuboctfloat\r\n\r\n* $ man octfloattofloat\r\n\r\n* $ man octmultoct\r\n\r\n* $ man octsuboct\r\n\r\n* $ man octtoint \r\n\r\n## Credits:\r\n\r\n\r\nThank's to my beloved mother, my family and the doctors.\r\n\r\nStay away from drugs: drugs destroy your brain and life. \r\n\r\n## License\r\n\r\n                                                                                       \r\n**libHOBDCalc** is a little multibases converting and calculation\r\n\r\nfacilities library.\r\n\t\t\t\t\t\r\n**libHOBDCalc** (C) 2014 Brüggemann Eddie (Alias mrcyberfighter).                         \r\n\t\t\r\n\t\t\r\nThis file is part of libHOBDCalc.                                 \r\n\r\n**libHOBDCalc** is free software: you can redistribute it and/or modify\r\n\r\nit under the terms of the GNU General Public License as published by           \r\n\r\nthe Free Software Foundation, either version 3 of the License, or              \r\n\r\n(at your option) any later version.                                            \r\n\t\t\r\n\t\t\r\n**libHOBDCalc** is distributed in the hope that it will be useful,      \r\n\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of                  \r\n\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                   \r\n\r\nGNU General Public License for more details.                                   \r\n\t\t\t\t\t\t\t\t\t      \r\nYou should have received a copy of the GNU General Public License              \r\n\r\nalong with libHOBDCalc. If not, see <http://www.gnu.org/licenses/>\r\n\t\t\t\t\t\t\t\t\t      \r\n\r\n\r\nCopyright (C) GPLv3 2014 Brüggemann Eddie <mrcyberfighter@gmail.com>.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}